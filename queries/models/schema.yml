version: 2

sources:
  - name: stg_cerco_digital
    database: rj-civitas
    schema: cerco_digital_staging
    tables:
      - name: cameras

  - name: stg_disque_denuncia
    database: rj-civitas
    schema: disque_denuncia_staging
    tables:
      - name: denuncias
      - name: denuncias_historico
      - name: xpto_denuncia
      - name: xptos
      - name: difusao_externa
      - name: orgaos_externos
      - name: assuntos_denuncias
      - name: assuntos_classes
      - name: assuntos_tipos
      - name: envolvidos
      - name: envolvidos_pele
      - name: envolvidos_estatura
      - name: envolvidos_olhos
      - name: envolvidos_cabelo
      - name: envolvidos_porte

  - name: stg_fogo_cruzado
    database: rj-civitas
    schema: fogo_cruzado_staging
    tables:
      - name: ocorrencias

  - name: chamados_1746
    database: rj-segovi
    schema: adm_central_atendimento_1746
    tables:
      - name: chamado

  - name: datario
    database: datario
    schema: dados_mestres
    tables:
      - name: logradouro
      - name: bairro

  - name: integracao_reports
    database: rj-civitas
    schema: integracao_reports
    tables:
      - name: tipos_interesse_1746

  - name: ocr_radar
    database: rj-cetrio
    schema: ocr_radar
    tables:
      - name: readings_2024
        identifier: readings_2024_*
      - name: all_readings_raw
        identifier: readings_*
        tests:
          - dbt_utils.expression_is_true:
              name: test_camera_numero_and_coordinates_not_mutually_empty
              expression: |
                (camera_numero IS NOT NULL AND camera_numero NOT IN ('', '0')) OR
                (camera_latitude != 0.0 AND camera_longitude != 0.0)
              config:
                severity: error
                where: "datahora >= '{{ var('start_date') }}'"
        columns:
          - name: datahora_captura
            #tests:
              #- dbt_expectations.expect_column_values_to_not_be_null:
               #   name: test_datahora_captura_not_null
                #  where: "datahora >= '{{ var('start_date') }}'"
          - name: placa
            tests:
              - dbt_expectations.expect_column_values_to_not_be_null:
                  name: test_placa_not_null
                  where: "datahora >= '{{ var('start_date') }}'"
              #- dbt_expectations.expect_column_values_to_not_be_in_set:
               #   name: test_placa_not_empty_or_zero_or_dashes
                #  value_set: ["", "0", "-------"]
                 # where: "datahora >= '{{ var('start_date') }}'"
                  #config:
                   # severity: warn
              - dbt_expectations.expect_column_value_lengths_to_equal:
                  name: test_placa_length_equals_7
                  value: 7
                  where: "placa IS NOT NULL AND placa != '' AND datahora >= '{{ var('start_date') }}'"
              - dbt_expectations.expect_column_values_to_match_regex_list:
                  name: test_placa_brazilian_or_mercosul_pattern
                  regex_list: [
                     "^[A-Z-]{3}[0-9-]{4}$",  # Padrão antigo + parcial: AAA1111 ou AB-12--
                     "^[A-Z-]{3}[0-9-][A-Z-][0-9-]{2}$"  # Padrão Mercosul + parcial: AAA1A23 ou A--1-2-
                  ]
                  match_on: any
                  where: "placa IS NOT NULL AND placa != '' AND datahora >= '{{ var('start_date') }}'"
                  is_raw: True
                  flags: i
                  config:
                    severity: warn

          - name: tipoveiculo
          - name: velocidade
          - name: datahora
          - name: camera_numero
            tests:
              #- dbt_expectations.expect_column_values_to_not_be_null:
               #   name: test_camera_numero_not_null
                #  where: "datahora >= '{{ var('start_date') }}'"
              #- dbt_expectations.expect_column_values_to_not_be_in_set:
               #   name: test_camera_numero_not_empty_or_zero
                #  value_set: ["", "0", 0]
                 # where: "datahora >= '{{ var('start_date') }}'"
              - dbt_expectations.expect_column_values_to_match_regex:
                  name: test_camera_numero_only_numbers
                  regex: "^[0-9]+$"
                  where: "datahora >= '{{ var('start_date') }}'"
                  config:
                    severity: warn

              #- relationships:
               #   name: test_camera_numero_exists_in_equipamento
                #  to: source('ocr_radar', 'equipamento')
                 # field: codcet
                  #where: "datahora >= '{{ var('start_date') }}' AND NOT REGEXP_CONTAINS(camera_numero, r'[a-zA-Z]')"

          - name: camera_latitude
          - name: camera_longitude
          - name: empresa

      - name: equipamento
      - name: equipamento_codcet_to_camera_numero
      - name: tipoveiculo_mapping

  - name: g20
    database: rj-civitas
    schema: g20
    tables:
      - name: contextos

  - name: stg_scraping_redes
    database: rj-civitas
    schema: scraping_redes_staging
    tables:
      - name: telegram_georreferenciado
      - name: telegram_messages
      - name: telegram_chats
      - name: twitter_georreferenciado
      - name: twitter_messages
      - name: twitter_chats

  - name: smtr_veiculo
    database: rj-smtr
    schema: veiculo
    tables:
      - name: licenciamento